import Head from "next/head";
import { useState } from "react";
import WineCard from "../components/WineCard/WineCard";
import { HiChevronRight, HiChevronLeft } from "react-icons/hi";
import { Button } from "../components/ChangePageButton/styles";
import Loading from "../components/Loading/index";
import Filter from "../components/Filter";

import MainLayout from "../layout/MainLayout";

import {
  FilterContainer,
  ButtonsContainer,
  PageContainer,
  NumberPage,
  NumberOfProducts,
  Cards,
  ErrorTextContainer,
  ErrorText,
  Highlight,
  Main,
} from "../styles/HomeStyles";
import { useWineItems } from "../hooks/queries";
import { Response } from "../services/types";

const limit = 9;

const Home = (): JSX.Element => {
  const [filter, setFilter] = useState("");
  const [page, setPage] = useState(1);
  const [search, setSearch] = useState("");

  const { data, status } = useWineItems({ filter, limit, name: search, page });

  const getNextPage = () => {
    if (data?.totalPages === page) {
      return;
    }
    setPage(page + 1);
  };

  const getPreviousPage = () => {
    if (page === 1) {
    }
    setPage(page - 1);
  };

  const onChangeSearchText = (text: string) => {
    setSearch(text);
  };

  return (
    <MainLayout>
      <Head>
        <title>Wines</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {(status === "loading" || status === "idle") && (
        <div>
          <h2>Loading...</h2>
          <Loading />
        </div>
      )}

      {status === "error" && (
        <div className="message">
          <h3>Erro</h3>
        </div>
      )}

      {status === "success" && (
        <>
          <FilterContainer>
            <Filter setFilter={setFilter} filter={filter} />
          </FilterContainer>

          <Main>
            <NumberOfProducts>
              <Highlight>{data?.totalItems} </Highlight>
              Produtos encontrados
            </NumberOfProducts>
            {(data as Response).totalItems > 0 ? (
              <>
                <Cards>
                  {data?.items?.map((item) => (
                    <WineCard
                      id={item.id}
                      key={item.id}
                      name={item.name}
                      image={item.image}
                      price={item.price}
                      discount={item.discount}
                      priceMember={item.priceMember}
                      priceNoMember={item.priceNonMember}
                    />
                  ))}
                </Cards>
                <ButtonsContainer>
                  <Button onClick={getPreviousPage} disabled={page === 1}>
                    <HiChevronLeft />
                  </Button>
                  <PageContainer>
                    <NumberPage>{page}</NumberPage>
                  </PageContainer>
                  <Button
                    onClick={getNextPage}
                    disabled={page === data?.totalPages}
                  >
                    <HiChevronRight />
                  </Button>
                </ButtonsContainer>
              </>
            ) : (
              <ErrorTextContainer>
                <ErrorText>Nenhum produto foi encontrado.</ErrorText>
              </ErrorTextContainer>
            )}
          </Main>
        </>
      )}
    </MainLayout>
  );
};

export default Home;
